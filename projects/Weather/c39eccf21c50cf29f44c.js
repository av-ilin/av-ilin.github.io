function _defineProperty(e,t,n){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"==typeof t?t:String(t)}function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}class Manager{constructor(){this.location="55.755826,37.617300",this.update(),setInterval((()=>{this.update()}),3e5),Manager.city.name.textContent="Москва";for(let e=0;e<Manager.city.list.children.length;e++)Manager.city.list.children[e].textContent=GeoAPI.CITY[e].name;["onclick","ontouch"].forEach((e=>{Manager.city.but[e]=function(){Manager.city.but.classList.add("active"),Manager.city.name.classList.add("active"),Manager.city.inp.classList.add("active"),Manager.city.inp.focus();for(let e=0;e<Manager.city.list.children.length;e++)Manager.city.list.children[e].textContent=GeoAPI.CITY[e].name}})),Manager.city.inp.oninput=function(){let e=Manager.city.inp.value,t=GeoAPI.get(e);for(let e=0;e<t.length&&!(e+1>Manager.city.list.children.length);e++)Manager.city.list.children[e].textContent=t[e].name},Manager.city.inp.addEventListener("focusout",(function(){Manager.city.but.classList.remove("active"),Manager.city.name.classList.remove("active"),Manager.city.inp.classList.remove("active"),Manager.city.inp.value=""}));for(let e of Manager.city.list.children)["onclick","ontouch"].forEach((t=>{e[t]=()=>{Manager.city.name.textContent=e.textContent,this.location=GeoAPI.getCoord(e.textContent),this.update()}}))}update(){this.loadOn(),WeatherApi.get(this.location).then((e=>{console.log(e),Manager.weather.icon.src="https:"+e.current.condition.icon,Manager.weather.degrees.textContent=e.current.temp_c,Manager.weather.wind.textContent=`Wind:   ${(1e3*e.current.wind_kph/3600).toFixed(2)} m/s`,Manager.weather.hum.textContent="Hum:   "+e.current.humidity+" %",Manager.weather.rain.textContent="Rain:   "+e.current.precip_in+" %",e.forecast.forecastday.forEach(((e,t)=>{Manager.weather.forecast[t].children[0].textContent=e.day.maxtemp_c+"°C",Manager.weather.forecast[t].children[1].src="https:"+e.day.condition.icon,Manager.weather.forecast[t].children[2].textContent=e.day.mintemp_c+"°C",Manager.weather.forecast[t].children[3].textContent=new Date(e.date).toDateString().slice(0,3)}));let t=e.forecast.forecastday[0].astro.sunrise,n=e.forecast.forecastday[0].astro.sunset;Manager.weather.sunrise.time.textContent=t,Manager.weather.sunset.time.textContent=n,t=t.split(/:| /).slice(0,2),Manager.weather.sunrise.hour.style.transform=`rotate(${30*+t[0]+90+ +t[1]/60*30}deg)`,Manager.weather.sunrise.min.style.transform=`rotate(${6*+t[1]+90}deg)`,n=n.split(/:| /).slice(0,2),Manager.weather.sunset.hour.style.transform=`rotate(${30*+n[0]+90+ +n[1]/60*30}deg)`,Manager.weather.sunset.min.style.transform=`rotate(${6*+n[1]+90}deg)`,setTimeout((()=>{this.loadOff()}),500)}))}loadOn(){Manager.weather.load.style.zIndex="50",Manager.weather.load.style.opacity="1";for(let e of Manager.weather.widget.children)e.style.opacity="0"}loadOff(){Manager.weather.load.style.zIndex="-1",Manager.weather.load.style.opacity="0";for(let e of Manager.weather.widget.children)e.style.opacity="1"}}_defineProperty(Manager,"weather",{widget:document.getElementById("widget"),contentWeather:document.getElementById("weather_content"),contentCity:document.getElementById("city_content"),load:document.getElementById("load"),icon:document.getElementById("icon"),degrees:document.getElementById("degrees"),wind:document.getElementById("wind"),hum:document.getElementById("hum"),rain:document.getElementById("rain"),forecast:document.getElementsByClassName("forecast__card"),sunrise:{time:document.getElementsByClassName("city__sun-time")[0],min:document.getElementsByClassName("city__sun-clock_min")[0],hour:document.getElementsByClassName("city__sun-clock_hour")[0]},sunset:{time:document.getElementsByClassName("city__sun-time")[1],min:document.getElementsByClassName("city__sun-clock_min")[1],hour:document.getElementsByClassName("city__sun-clock_hour")[1]}}),_defineProperty(Manager,"city",{but:document.getElementsByClassName("city__search-btn")[0],name:document.getElementsByClassName("city__name")[0],inp:document.getElementsByClassName("city__search-input")[0],list:document.getElementsByClassName("city__list")[0]});